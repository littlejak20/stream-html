X - Den Switcher so umstellen, sodass sich der iframe nicht neu lädt
X - Aktiven Mode auf Config markieren
- Swicther Config 1 klick markieren, evtl. auch ein Abbruchbutton einbauen
- Allgemein Button auf Config vergrößern
X Aufräumen und doppelte Sachen auslagern
X CSS MIME Type Problem lösen
X Sass Prefixer einbauen
	X --> CSS ins SCSS umschreiben
X script Part in JS File auslagern
- Unterschiedliche Profile speichern
	--> Vielleicht mit Datenbak Anbindung
- Url vereinfacher mit Dropdown Kategorieren
	--> Twitch Stream
	--> Twitch VOD
	--> YouTube Video
	--> YouTube Stream
	--> YouTube Playlist
- Dropdownlsite mit hinzugefügen URLs
X - vereinfacht durch Kategorieren
- HTML Template Engine???
- Nur Stream Iframes aktiv halten, die aktuell auch eingezeigt werden
	--> evtl. Funktion aktivieren oder deaktivieren 
X - Bei Seitenaufruf evtl. gesamtes video array schicken

X - Twitch volume in array dict speichern
X - Bei Switcher Benutzung werden die Textfelder und volume nicht aktuallisiert
	X --> hier vielleicht das gesamtes video array mit schicken
X - server und client Datenstruktur umbauen

Für Version 2:
X - Formeingaben in new Struktur speicher und senden
- Reloader Funktionen wieder versuchen einzubauen
- API der jeweiligen Dienste (Twitch, YouTube) ansprechen, um Funktione, wie Stop, lauter, leiser, nutzen zu können
- YouTube Player Auto untersuchen, da nicht richtig reagiert

Version 3:
X - Datenbank einbauen
X - Aktuelle Config/Ansicht in ein Profil (mit Namentextfield oder Dropdownliste) in der Datenbank speichern können
X - Profil aus DB laden können
X - Auflistung aller Profile in einem Dropdown
? - Bei Switcher, Mode Profilnamen richtig mitsenden
	--> könnte wegfallen, wenn die Profil Idee umgesetzt wird
? - Profile (Idee)
	--> Textfeld nur zum anlegen eines neum Profils nutzen
		--> blankes Profil nutzen
		--> Nach anlegen als aktuelles Profil im dropdown anzeigen undladen
		--> Button "Hinzufügen" hinzufügen
	--> Aktuelles Dropdownprofil
		--> zum Speichern nutzen
		--> "Speichern" Button zum Dropdown verschieben
		--> "Laden" Button so lassen
		--> "Name Editieren" Button hinzufügen
		--> "Löschen" Button hinzufügen
	--> Aktuelles Profil

- 'profileName reload' und 'config reload' zusammenführen (Server- und Clientseitig)

- experimental - setQuality for player1
	--> Player ist bereits geladen, aber Stream startet später, dann wird die höchste Qualität nicht gesetzt


https://stackoverflow.com/questions/1458724/how-do-i-set-unset-a-cookie-with-jquery
https://stackoverflow.com/questions/2064850/how-to-refresh-an-iframe-using-javascript
https://www.tutorials.de/threads/iframe-automatisch-aktualisieren-lassen.365897/
https://css-tricks.com/snippets/jquery/force-iframe-to-reload/
https://expressjs.com/en/starter/static-files.html

https://stackoverflow.com/questions/11635845/serving-the-socket-io-javascript-file-to-a-client-via-node-js-express
http://zetcode.com/javascript/nodesass/
https://medium.com/@kanokpit.skuberg/easy-sass-project-and-compile-with-npm-5861457195b5

https://sass-lang.com/documentation/syntax

https://dev.twitch.tv/docs/embed/video-and-clips#interactive-frames-for-live-streams-and-vods
https://developers.google.com/youtube/iframe_api_reference


///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////
https:

https://timonweb.com/posts/running-expressjs-server-over-https/
openssl req -nodes -new -x509 -keyout server.key -out server.cert

var express = require('express')
var fs = require('fs')
var https = require('https')
var app = express()

app.get('/', function (req, res) {
  res.send('hello world')
})

https.createServer({
  key: fs.readFileSync('server.key'),
  cert: fs.readFileSync('server.cert')
}, app)
.listen(3000, function () {
  console.log('Example app listening on port 3000! Go to https://localhost:3000/')
})

////

https://letsencrypt.org/docs/certificates-for-localhost/
openssl req -x509 -out localhost.crt -keyout localhost.key \
  -newkey rsa:2048 -nodes -sha256 \
  -subj '/CN=localhost' -extensions EXT -config <( \
   printf "[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:localhost\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth")

openssl req -x509 -out 19216817848.crt -keyout 19216817848.key  -newkey rsa:2048 -nodes -sha256  -subj '/CN=192.168.178.48' -extensions EXT -config <(   printf "[dn]\nCN=192.168.178.48\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:192.168.178.48\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth")

///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////

gulp:
https://gulpjs.com/
https://www.npmjs.com/package/autoprefixer
https://www.npmjs.com/package/gulp-watch

https://www.youtube.com/watch?v=et9u6V8qx9k

CALL:
gulp sass
gulp sass-watch

///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////

15.06.2020
- Twitch API
	--> erweiterte Profilinformationen über "https://api.twitch.tv/helix/users" laden
		--> ACHTUNG: Braucht kein O-Auth. Dokumentation falsch
	--> Livestatus über "https://api.twitch.tv/helix/streams" laden
	--> Alle API Calls in ein Array/Dict zusammenführen
		--> Über Type in Funktion bestimmen, welche Daten gepackt werden
		--> ...

- Profile (Idee)
	--> Verstehen was ich damit meine (siehe oben)
	--> Löschen Button und Funktionalität einbinden
	--> Umbennen Button und Funktionalität einbinden
	--> ..

- main.js
	--> YouTube
		--> Volume fixen
		--> first ready call function wieder einbauen
	--> gulp so umstellen, sodass nur noch alle js Klassen gebündelt werden, aber nicht minifiziert
	--> Teile im Klassen bündeln (vielleicht)

- Allgeime aufräumen

///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////

14.11.2020:
- Schauen, welche Notizen angehackt werden können
- (Idee) Streams entferenen, wenn sie nicht sichtbar sind, um Internet Trafic zu sparen
	--> Oder herrausfinden, ob die Twitch/YouTube Apis es anbieten auf "only audio" zu stellen
- (Idee) Videoqualität forzieren
	=== Für jeden Player die passende Twicth/Youtube Qulitätsstuffe, anhand der Breite/Höhe des jeweiligen iframe containers, setzten
	--> Berechnug der passenden Qulität errechnen
	--> Twitch/YouTube Qulitätsstuffen auslesen und passende wählen
		--> Wenn Stream/Video die errechnete Qulitätsstuffe nicht hat die nächst kleienre wählen
- (Idee) Screencapture einbinden
	--> Ist es möglich mehr als ein Screencaptue einzubinden
	--> Nur möglich, über lokalen browser client
	--> Im Kategorie Dropdown "Screencapture" aufnehmen
	--> Wenn Kategorie "Screencapture" gewählt ist, im lokalen browser client ein Button zum anklicken in das Player div packen
	--> Checken, ob der Screencapture auch nach switch noch zu sehen ist
	--> Was tun, wenn Profil gewechselt wird und sich dadurch das Screencapture verschiebt
- Neuen Look für Configpage
	--> Noch keine Anhung wie, muss mir hier noch gedanken machen
- (Idee) Neue/Veränderte Screenvarianten (top, bottom, .....)
	--> Dynamisch
		--> je nachdem, wie viele Streams hinzugefügt sind, die player passend plazieren und die größe Anpassen
		--> also dynamisch den Platz optimal ausnutzen
	--> Bei allen bestehenden Varianten
		--> das grid halb oder ganz auflösen
		--> und durch flex ersetzen, um die player mittiger setzen zu können
		--> also in Zwilen oder Splaten aufteilen (jenachdem)
		--> dabei darauf achten, das die Player Breite und Höhe immer fest gesetzt sind
		--> FLEX FLEX
