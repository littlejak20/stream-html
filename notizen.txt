X - Den Switcher so umstellen, sodass sich der iframe nicht neu lädt
X - Aktiven Mode auf Config markieren
- Swicther Config 1 klick markieren, evtl. auch ein Abbruchbutton einbauen
- Allgemein Button auf Config vergrößern
X Aufräumen und doppelte Sachen auslagern
X CSS MIME Type Problem lösen
X Sass Prefixer einbauen
	X --> CSS ins SCSS umschreiben
X script Part in JS File auslagern
- Unterschiedliche Profile speichern
	--> Vielleicht mit Datenbak Anbindung
- Url vereinfacher mit Dropdown Kategorieren
	--> Twitch Stream
	--> Twitch VOD
	--> YouTube Video
	--> YouTube Stream
	--> YouTube Playlist
- Dropdownlsite mit hinzugefügen URLs
X - vereinfacht durch Kategorieren
- HTML Template Engine???
- Nur Stream Iframes aktiv halten, die aktuell auch eingezeigt werden
	--> evtl. Funktion aktivieren oder deaktivieren 
X - Bei Seitenaufruf evtl. gesamtes video array schicken

X - Twitch volume in array dict speichern
X - Bei Switcher Benutzung werden die Textfelder und volume nicht aktuallisiert
	X --> hier vielleicht das gesamtes video array mit schicken
X - server und client Datenstruktur umbauen

Für Version 2:
X - Formeingaben in new Struktur speicher und senden
- Reloader Funktionen wieder versuchen einzubauen
- API der jeweiligen Dienste (Twitch, YouTube) ansprechen, um Funktione, wie Stop, lauter, leiser, nutzen zu können
- YouTube Player Auto untersuchen, da nicht richtig reagiert
- Volume allgemein von 1.0 auf 100 umstellen (beachte Rechnung für Twicth und YouTube)

Version 3:
- Datenbank einbauen
- Aktuelle Config/Ansicht in ein Profil (mit Namentextfield oder Dropdownliste) in der Datenbank speichern können
- Profil aus DB laden können
- Auflistung aller Profile in einem Dropdown


https://stackoverflow.com/questions/1458724/how-do-i-set-unset-a-cookie-with-jquery
https://stackoverflow.com/questions/2064850/how-to-refresh-an-iframe-using-javascript
https://www.tutorials.de/threads/iframe-automatisch-aktualisieren-lassen.365897/
https://css-tricks.com/snippets/jquery/force-iframe-to-reload/
https://expressjs.com/en/starter/static-files.html

https://stackoverflow.com/questions/11635845/serving-the-socket-io-javascript-file-to-a-client-via-node-js-express
http://zetcode.com/javascript/nodesass/
https://medium.com/@kanokpit.skuberg/easy-sass-project-and-compile-with-npm-5861457195b5

https://sass-lang.com/documentation/syntax

https://dev.twitch.tv/docs/embed/video-and-clips#interactive-frames-for-live-streams-and-vods
https://developers.google.com/youtube/iframe_api_reference


///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////
https:

https://timonweb.com/posts/running-expressjs-server-over-https/
openssl req -nodes -new -x509 -keyout server.key -out server.cert

var express = require('express')
var fs = require('fs')
var https = require('https')
var app = express()

app.get('/', function (req, res) {
  res.send('hello world')
})

https.createServer({
  key: fs.readFileSync('server.key'),
  cert: fs.readFileSync('server.cert')
}, app)
.listen(3000, function () {
  console.log('Example app listening on port 3000! Go to https://localhost:3000/')
})

///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////

gulp:
https://gulpjs.com/
https://www.npmjs.com/package/autoprefixer
https://www.npmjs.com/package/gulp-watch

https://www.youtube.com/watch?v=et9u6V8qx9k

CALL:
gulp sass
gulp sass-watch

///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////